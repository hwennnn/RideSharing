import { createTripAsPassenger, getStaticPathForPassengers } from '../../../utils/passenger-utils';
import Head from 'next/head'
import styles from '../../../styles/Home.module.css'
import React, { useState } from 'react'
import { Button, Input, Form } from 'semantic-ui-react'
import Router from 'next/router';

export async function getStaticProps({ params }) {
    const passenger_id = params.id
    return {
        props: {
            passenger_id
        }
    }
}

export async function getStaticPaths() {
    const paths = await getStaticPathForPassengers();

    return {
        paths,
        fallback: false
    }
}

export default function CreateTrip({ passenger_id }) {
    const [pickupPostalCode, setPickupPostalCode] = useState("")
    const [droppffPostalCode, setDropoffPostalCode] = useState("")

    async function createTrip() {
        if (pickupPostalCode != "" && droppffPostalCode != "") {
            console.log(pickupPostalCode, droppffPostalCode)
            let response = await createTripAsPassenger(passenger_id, pickupPostalCode, droppffPostalCode)

            if (response.status == 201) {
                Router.push(`/passenger/${passenger_id}`)
            } else {
                alert(response.data)
            }

        }
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Trip</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <h1 className={styles.title}>
                Create Trip
            </h1>

            <br />

            <Form>
                <Form.Group widths='equal'>
                    <Form.Field>
                        <label>Pickup Postal Code</label>
                        <Input value={pickupPostalCode} onChange={e => setPickupPostalCode(e.target.value)} maxLength="10" fluid placeholder='Pickup Postal Code' />
                    </Form.Field>
                    <Form.Field>
                        <label>Dropoff Postal Code</label>
                        <Input value={droppffPostalCode} onChange={e => setDropoffPostalCode(e.target.value)} maxLength="10" fluid placeholder='Dropoff Postal Code' />
                    </Form.Field>
                </Form.Group>

                <Button onClick={createTrip} type='submit'>Submit</Button>
            </Form>

        </div>
    )
}