import { getPassenger, getStaticPathForPassengers } from '../../../utils/passenger-utils';
import React, { useState } from 'react'
import { Button, Input, Form } from 'semantic-ui-react'
import styles from '../../../styles/Home.module.css'
import Head from 'next/head'
import Router from 'next/router';
import axios from 'axios';
import { clientRequestBaseUrl, requestConfig } from '../../../utils/globals';


export async function getStaticProps({ params }) {
    const passengerID = params.id
    const passenger = await getPassenger(passengerID);
    return {
        props: {
            ...passenger
        }
    }
}

export async function getStaticPaths() {
    const paths = await getStaticPathForPassengers();

    return {
        paths,
        fallback: false
    }
}

export default function EditPassenger({ passenger_id, first_name, last_name, mobile_number, email_address }) {
    const [firstName, setFirstName] = useState(first_name)
    const [lastName, setLastName] = useState(last_name)
    const [mobileNumber, setMobileNumber] = useState(mobile_number)
    const [emailAddress, setEmailAddress] = useState(email_address)

    async function updateAsPassenger() {
        if (firstName != '' && lastName != '' && mobileNumber != '' && emailAddress != '') {
            console.log(firstName, lastName, mobileNumber, emailAddress)

            var body = {
                "passenger_id": passenger_id,
                "first_name": firstName,
                "last_name": lastName,
                "mobile_number": mobileNumber,
                "email_address": emailAddress,
            }
            console.log(body)
            try {
                let response = await axios.put(`${clientRequestBaseUrl}/passengers/${passenger_id}`, body, requestConfig);
                if (response.status == 202) {
                    console.log(response.data)
                    Router.push(`/passenger/${passenger_id}`)
                } else {
                    alert(response.data)
                }
            } catch (err) {
                alert(err)
            }
        }
    }

    function backToPassengerHome() {
        Router.push(`/passenger/${passenger_id}`)
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Edit Passenger Profile</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <h1 className={styles.title}>
                Edit Passenger Profile
            </h1>

            <br />

            <Form>
                <Form.Group widths='equal'>
                    <Form.Field>
                        <label>First Name</label>
                        <Input value={firstName} onChange={e => setFirstName(e.target.value)} maxLength="30" fluid placeholder='First Name' />
                    </Form.Field>
                    <Form.Field>
                        <label>Last name</label>
                        <Input value={lastName} onChange={e => setLastName(e.target.value)} maxLength="30" fluid placeholder='Last Name' />
                    </Form.Field>
                </Form.Group>

                <Form.Group widths='equal'>
                    <Form.Field>
                        <label>Mobile Number</label>
                        <Input value={mobileNumber} onChange={e => setMobileNumber(e.target.value)} maxLength="15" fluid placeholder='Mobile Number' />
                    </Form.Field>
                    <Form.Field>
                        <label>Email Address</label>
                        <Input value={emailAddress} onChange={e => setEmailAddress(e.target.value)} maxLength="30" type="email" fluid placeholder='Email Address' />
                    </Form.Field>
                </Form.Group>

                <Button onClick={updateAsPassenger} type='submit'>Submit</Button>
            </Form>

            <br />
            <Button primary onClick={backToPassengerHome} type='submit'>Back To Home</Button>
        </div>
    );
}