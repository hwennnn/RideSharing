version: "3.9"
services:
  db:
    container_name: ridesharing_db
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    restart: always
    environment:
      MYSQL_DATABASE: 'RideSharing'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - ./backend/database/:/app
    networks:
      - sub-etha
  
  driver_backend:
    container_name: driver_microservice
    # Configuration for building the docker image for the service
    build:
      context: ./backend/microservices/drivers/ # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    expose:
      # Opens port 8080 on the container
      - '8080'
    volumes:
      - ./backend/microservices/drivers:/code
    restart: always
    depends_on:
      - db
    networks:
      - sub-etha

  passenger_backend:
    container_name: passenger_microservice
    # Configuration for building the docker image for the service
    build:
      context: ./backend/microservices/passengers/ # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    expose:
      # Opens port 8081 on the container
      - '8081'
    volumes:
      - ./backend/microservices/passengers:/code
    restart: always
    depends_on:
      - db
    networks:
      - sub-etha

  trip_backend:
    container_name: trip_microservice
    # Configuration for building the docker image for the service
    build:
      context: ./backend/microservices/trips/ # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    expose:
      # Opens port 8082 on the container
      - '8082'
    volumes:
      - ./backend/microservices/trips:/code
    restart: always
    depends_on:
      - db
    networks:
      - sub-etha

  acl:
    container_name: acl_server
    build:
      context: ./backend/server/
      target: dev
    volumes:
      - ./backend/server/:/app
    command: npm run start
    expose:
      # Opens port 4000 on the container
      - '4000'
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
    depends_on:
      - driver_backend
      - passenger_backend
      - trip_backend
    networks:
      - sub-etha

  frontend:
    container_name: web_frontend
    build:
      context: ./frontend/
      target: dev
    volumes:
      - ./frontend/:/app
    command: npm run dev
    expose:
      # Opens port 3000 on the container
      - '3000'
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
    depends_on:
      - proxy
    networks:
      - sub-etha  

  general_server:
    container_name: general_purpose_server
    build:
      context: ./server/
      target: dev
    volumes:
      - ./server/:/app
    command: npm run start
    expose:
      # Opens port 5000 on the container
      - '5000'
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
    depends_on:
      - driver_backend
      - passenger_backend
      - trip_backend
    networks:
      - sub-etha

  proxy:
    container_name: ridesharing_proxy
    build: 
      context: backend/proxy
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on: 
      - general_server
      - acl
    networks:
      - sub-etha

networks:
  sub-etha: